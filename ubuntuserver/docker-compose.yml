x-environment-variables: &env-vars
  - PUID=1000
  - PGID=1000
  - TZ=Etc/UTC

x-downloads-volume-config: &downloads-volume-config
  type: volume
  source: media
  target: /downloads
  volume:
    subpath: downloads

x-movies-volume-config: &movies-volume-config
  type: volume
  source: media
  target: /movies
  volume:
    subpath: movies

x-tv-volume-config: &tv-volume-config
  type: volume
  source: media
  target: /tv
  volume:
    subpath: tv

services:
  # Temporary service to create directories if the NFS that is needed
  setup:
    image: alpine
    command: >
      /bin/sh -c "mkdir -p
      /configs/sonarr_config 
      /configs/radarr_config
      /configs/lidarr_config
      /configs/bazarr_config
      /configs/readarr_config
      /configs/prowlarr_config
      /media/tv 
      /media/movies 
      /media/music 
      /media/books
      /media/downloads && exit 0"
    volumes:
      - media:/media
      - configs:/configs
    environment: *env-vars
    restart: "no"

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    volumes:
    - type: volume
      source: configs
      target: /config
      volume:
        subpath: sonarr_config
    - *tv-volume-config
    - *downloads-volume-config
    environment: *env-vars
    ports:
      - 8989:8989
    networks:
      - internal_network
    depends_on:
      - setup

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment: *env-vars
    volumes:
      - type: volume
        source: configs
        target: /config
        volume:
          subpath: radarr_config
      - *movies-volume-config
      - *downloads-volume-config
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - setup

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment: *env-vars
    volumes:
      - type: volume
        source: configs
        target: /config
        volume:
          subpath: lidarr_config
      - type: volume
        source: media
        target: /music
        volume:
          subpath: music
      - *downloads-volume-config
    ports:
      - 8686:8686
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - setup

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment: *env-vars
    volumes:
      - type: volume
        source: configs
        target: /config
        volume:
          subpath: bazarr_config
      - *tv-volume-config
      - *movies-volume-config
      - *downloads-volume-config
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - setup

 
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment: *env-vars
    volumes:
      - type: volume
        source: configs
        target: /config
        volume:
          subpath: readarr_config
      - type: volume
        source: media
        target: /books
        volume:
          subpath: books
      - *downloads-volume-config
    ports:
      - 8787:8787
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - setup
 
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment: *env-vars
    volumes:
      - type: volume
        source: configs
        target: /config
        volume:
          subpath: prowlarr_config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - internal_network
    depends_on:
      - setup
#  
#    jellyfin:
#      image: linuxserver/jellyfin
#      container_name: jellyfin
#      environment:
#        - PUID=1000
#        - PGID=1000
#        - TZ=Etc/UTC
#      volumes:
#        - jellyfin_config:/config
#        - media:/media
#      ports:
#        - 8096:8096
#      restart: unless-stopped
#  
#    photoprism:
#      image: linuxserver/photoprism
#      container_name: photoprism
#      environment:
#        - PHOTOPRISM_ADMIN_PASSWORD=photoprism
#      volumes:
#        - photoprism_config:/photoprism/storage
#        - media:/photoprism/originals
#      ports:
#        - 2342:2342
#      restart: unless-stopped
#  
#    frigate:
#      image: blakeblackshear/frigate
#      container_name: frigate
#      environment:
#        - FRIGATE_RTSP_PASSWORD=yourpassword
#      volumes:
#        - frigate_config:/config
#        - media:/media/frigate
#      ports:
#        - 5000:5000
#      restart: unless-stopped
#  
#    vaultwarden:
#      image: linuxserver/vaultwarden
#      container_name: vaultwarden
#      environment:
#        - WEBSOCKET_ENABLED=true
#        - ADMIN_TOKEN=youradmintoken
#      volumes:
#        - vaultwarden_config:/data
#      ports:
#        - 8080:8080
#      restart: unless-stopped
#

networks:
  internal_network:
    driver: bridge

volumes:
  configs:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.0.39,rw,nfsvers=4
      device: ":/mnt/tank/set1/configs"

  media:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.0.39,rw,nfsvers=4
      device: ":/mnt/tank/set1/media/"

